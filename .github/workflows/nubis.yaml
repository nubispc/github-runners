name: build
on:
  push:
    branches:
    - nubis-runners
  pull_request:
  workflow_dispatch:

env:
    # Use docker.io for Docker Hub if empty
    #REGISTRY: docker.io
    REGISTRY: harbor.nbfc.io/nubificus
    # github.repository as <account>/<repo>
    IMAGE_NAME: gh-actions-runner-gcc-lite
    # IMAGE_NAME: ${{ github.repository }}
    #IMAGE_NAME: ananos/${{ github.repository }}

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: [ self-hosted, "${{ matrix.archconfig }}" ]
    
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      matrix:
        archconfig: [ x86_64 ]
        build_type: [ release ]
        tf_version: [ v2.11.0 ]

      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: ludeeus/action-shellcheck@1.1.0
    - uses: hadolint/hadolint-action@v2.1.0
    # Install the cosign tool except on PR
    # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: github.event_name != 'pull_request'
     #   uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
     #   with:
     #     cosign-release: 'v1.11.0'
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v1.13.1'
    - name: Check install!
      run: cosign version
    

    - name: Find SHA
      run: |
        if [[ "${{github.event.pull_request.head.sha}}" != "" ]]
        then
          echo "ARTIFACT_SHA=$(echo ${{github.event.pull_request.head.ref}})" >> $GITHUB_ENV
        else
          echo "ARTIFACT_SHA=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        fi

    - name: Set up Docker Context for Buildx
      id: buildx-context
      run: |
          docker context create builders
    # Workaround: https://github.com/docker/build-push-action/issues/461
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      with:
        version: latest
        endpoint: builders
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        #username: ${{ github.actor }}
        username: ${{ secrets.HARBOR_USER }}
        #password: ${{ secrets.GITHUB_TOKEN }}
        password: ${{ secrets.HARBOR_SECRET }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        #cache-from: type=local,src=/tmp
        #cache-to: type=local,mode=max,dest=/tmp
        file: Dockerfile.gcc-lite


    # Sign the resulting Docker image digest except on PRs.
    # This will only write to the public Rekor transparency log when the Docker
    # repository is public to avoid leaking data.  If you would like to publish
    # transparency data even for private images, pass --force to cosign below.
    # https://github.com/sigstore/cosign
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        COSIGN_EXPERIMENTAL: "true"
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
    - name: Clean up Docker Context for Buildx
      id: buildx-context-cleanup
      run: |
          docker context remove builders
